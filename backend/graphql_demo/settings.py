"""
Django settings for graphql_demo project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "=j9%q4z(ic2b=k85=soe(0wu+g5e5j9oqvlic228t&d^9#21y9"

# Environment currently being deploy
DEPLOY_ENV = os.environ.get("PRODUCTION")

# SECURITY WARNING: don't run with debug turned on in production!
if not (DEPLOY_ENV == "True"):
    DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition
DJANGO_APPS = (
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
)

CORE_APPS = ("graphql_demo.todos", "graphql_demo.users")

VENDORS_APPS = (
    "channels",
    "channels_api",
    "corsheaders",
    "graphene_django",
    "django_extensions",
    "rest_framework",
    "raven.contrib.django.raven_compat",
)

INSTALLED_APPS = DJANGO_APPS + CORE_APPS + VENDORS_APPS

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "graphql_jwt.middleware.JSONWebTokenMiddleware",
]

ROOT_URLCONF = "graphql_demo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "graphql_demo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "postgres",
        "USER": "postgres",
        "HOST": "db",
        "PORT": 5432,
    }
}

AUTHENTICATION_BACKENDS = [
    "graphql_jwt.backends.JSONWebTokenBackend",
    "django.contrib.auth.backends.ModelBackend",
]

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Graphene configuration
GRAPHENE = {
    "SCHEMA": "graphql_demo.schema.schema",  # Where your Graphene schema lives
    "MIDDLEWARE": [
        "graphene_django.debug.DjangoDebugMiddleware",
        "graphene_django_subscriptions.depromise_subscription",
    ],
}


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = "/static/"

# Django Cors headers -> to change with dev and prod env
CORS_ORIGIN_WHITELIST = ("*", "localhost:8080", "0.0.0.0:8888", "127.0.0.1:9000")
CSRF_TRUSTED_ORIGINS = ("*", "localhost:8080", "0.0.0.0:8888")

# Redis backend
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "MAX_ENTRIES": 5000,
        },
    }
}

# try to load local_settings.py if it exists
try:
    from graphql_demo.local_settings import *  # noqa: F403,F401
except Exception as e:
    pass
